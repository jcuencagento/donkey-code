{
    "randomTexts": [
        "Lorem ipsum",
        "Lorem ipsum dolor sit am;et consectetur adipiscing elit et, purus quam felis suspendisse sed mus taciti fringilla, elementum rutrum tincidunt montes dictumst facilisi enim.",
        "ornare porttitor nec sem habitasse feugiat duis interdum mollis nisi facilisi. Facilisi tempor a sociosqu purus odio condimentum in nascetur, rutrum suspendisse porttitor.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti. Proin nec sagittis libero.",
        "Duis vel tristique dolor. Aenean id turpis in enim fringilla consectetur. Nulla facilisi. Curabitur ultrices dolor vel elit convallis, ac lacinia tortor laoreet.",
        "Cras vel commodo odio. Curabitur id lacinia dui. Integer eleifend dui ut turpis convallis, ac suscipit velit luctus.",
        "Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor. Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In hac habitasse platea dictumst.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu.",
        "Integer eget eros sit amet tellus tincidunt imperdiet. Nullam vel tortor scelerisque, lobortis velit vel, scelerisque sapien.",
        "Praesent euismod ligula a ultricies sollicitudin. Proin vel sapien eget libero rhoncus suscipit vel ut mauris.",
        "Nunc sed odio id sapien dapibus rhoncus. Nullam tincidunt nulla quis turpis ultrices, a finibus erat vestibulum.",
        "Aliquam erat volutpat. Nam bibendum, leo a tristique dapibus, odio nisi dapibus elit, vel consectetur quam nisi vel eros.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Praesent eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Suspendisse efficitur, dolor eu aliquet aliquet, urna lectus varius metus, a interdum odio odio vel ligula.",
        "Curabitur sed mi vel velit condimentum gravida in vitae odio. Duis accumsan nisi eu justo euismod euismod.",
        "Maecenas euismod, risus vel cursus commodo, est nisl hendrerit odio, vel efficitur dolor justo nec neque.",
        "Morbi et tortor ac ante faucibus iaculis. Fusce vel sem vel arcu sagittis vulputate.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.",
        "Vivamus cursus risus ut est bibendum facilisis. Suspendisse potenti. Sed at justo ac nulla eleifend auctor nec non ex.",
        "Donec bibendum erat ac libero lobortis, sed tristique felis mattis. Nullam nec turpis quis felis facilisis congue.",
        "Ut fringilla, mi vel sollicitudin pharetra, nisi odio scelerisque lectus, id hendrerit quam odio in erat.",
        "Cras euismod justo id cursus vestibulum. Vestibulum non nunc id neque tincidunt tincidunt non a quam.",
        "Maecenas a metus vel elit venenatis tincidunt. Quisque luctus consequat eros, vitae lobortis nunc iaculis ut.",
        "Sed ac justo id ligula fringilla ullamcorper. Nullam et velit vel libero vestibulum volutpat.",
        "Fusce sit amet efficitur nulla. Quisque nec mauris a leo malesuada accumsan vitae at nisl.",
        "Proin convallis, leo sit amet tincidunt suscipit, risus quam imperdiet turpis, ut volutpat sapien orci eget enim.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer vel arcu in mi hendrerit mattis.",
        "Cras vulputate, felis eu euismod feugiat, purus metus viverra justo, nec hendrerit dolor lectus id urna.",
        "Si Messi es la Pulga, Diego Costa la Pantera como no, Falcao el Tigre y Vinicius el mo",
        "Suspendisse potenti. Proin nec sagittis libero. Duis vel tristique dolor. Aenean id turpis in enim fringilla consectetur. Nulla facilisi.",
        "Curabitur ultrices dolor vel elit convallis, ac lacinia tortor laoreet.",
        "Maecenas eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti.",
        "Proin nec sagittis libero. Cras vel commodo odio. Curabitur id lacinia dui. Nullam vel tortor scelerisque, lobortis velit vel, scelerisque sapien.",
        "Praesent eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu. Integer eget eros sit amet tellus tincidunt imperdiet.",
        "Curabitur sed mi vel velit condimentum gravida in vitae odio. Duis accumsan nisi eu justo euismod euismod. Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor.",
        "Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et, lobortis velit vel, scelerisque sapien",
        "Fusce sit amet efficitur nulla. Quisque nec mauris a leo malesuada accumsan vitae at nisl. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu. Integer eget eros sit amet tellus tincidunt imperdiet. Nullam vel tortor scelerisque.",
        "Maecenas euismod ligula a ultricies sollicitudin. Proin vel sapien eget libero rhoncus suscipit vel ut mauris. Nunc sed odio id sapien dapibus rhoncus.",
        "Nullam tincidunt nulla quis turpis ultrices, a finibus erat vestibulum. Vivamus cursus risus ut est bibendum facilisis. Suspendisse potenti.",
        "Sed ac justo id ligula fringilla ullamcorper. Nullam et velit vel libero vestibulum volutpat. Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer vel arcu in mi hendrerit mattis.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique. Sed ac justo id ligula fringilla ullamcorper.",
        "Nullam et velit vel libero vestibulum volutpat, mi vel sollicitudin pharetra, nisi odio scelerisque lectus, id hendrerit quam odio in erat.",
        "Aliquam erat volutpat. Nam bibendum, leo a tristique dapibus, odio nisi dapibus elit, vel consectetur quam nisi vel eros. Suspendisse efficitur, dolor eu aliquet aliquet, urna lectus varius metus.",
        "Donec bibendum erat ac libero lobortis, sed tristique felis mattis. Nullam nec turpis quis felis facilisis congue. Ut fringilla, ",
        "Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor. Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti. Proin nec sagittis libero. Cras vel commodo odio. Curabitur id lacinia dui.",
        "Maecenas eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus digniss",
        "a interdum odio odio vel ligula. Diam aliquet ante fermentum fames mus luctus nullam.",
        "Mitshubishi, Naruto, Honda, Kawasaki, Fujitsu, Oliver y Benji, Pokemon",
        "Est tincidunt magna ut non cum ante venenatis commodo torquent eu, felis nam enim.",
        "Gracias por practicar tus fking skills en esta pagina web"
    ],
    "Quotes": [
        "You miss 100% of the shots you dont take - Wayne Gretzky - Michael Scott",
        "Fuck them kids - Michael Jordan",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "Success is not final, failure is not fatal: It is the courage to continue that counts. - Winston S. Churchill",
        "The only way to do great work is to love what you do. - Steve Jobs",
        "In three words I can sum up everything I've learned about life: it goes on. - Robert Frost",
        "Be the change that you wish to see in the world. - Mahatma Gandhi",
        "Life is what happens when you're busy making other plans. - John Lennon",
        "I've learned that people will forget what you said, people will forget what you did, but people will never forget how you made them feel. - Maya Angelou",
        "The greatest glory in living lies not in never falling, but in rising every time we fall. - Nelson Mandela",
        "The purpose of our lives is to be happy. - Dalai Lama",
        "Get busy living or get busy dying. - Stephen King",
        "You have within you right now, everything you need to deal with whatever the world can throw at you. - Brian Tracy",
        "The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it. - Jordan Belfort",
        "Don't count the days, make the days count. - Muhammad Ali",
        "Believe you can and you're halfway there. - Theodore Roosevelt",
        "The way to get started is to quit talking and begin doing. - Walt Disney",
        "Your time is limited, don't waste it living someone else's life. - Steve Jobs",
        "Do not wait to strike till the iron is hot, but make it hot by striking. - William Butler Yeats",
        "It does not matter how slowly you go as long as you do not stop. - Confucius",
        "Success usually comes to those who are too busy to be looking for it. - Henry David Thoreau",
        "A creative man is motivated by the desire to achieve, not by the desire to beat others. - Ayn Rand",
        "Strive not to be a success, but rather to be of value. - Albert Einstein",
        "The future belongs to those who believe in the beauty of their dreams. - Eleanor Roosevelt",
        "I have not failed. I've just found 10,000 ways that won't work. - Thomas A. Edison",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "It's not whether you get knocked down, it's whether you get up. - Vince Lombardi",
        "Success is stumbling from failure to failure with no loss of enthusiasm. - Winston S. Churchill",
        "The only way to do great work is to love what you do. - Steve Jobs",
        "Hakuna Matata. - Timon and Pumba",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "Success is not the key to happiness. Happiness is the key to success. If you love what you are doing, you will be successful. - Albert Schweitzer",
        "Don't watch the clock; do what it does. Keep going. - Sam Levenson",
        "Believe you can and you're halfway there. - Theodore Roosevelt",
        "The only way to achieve the impossible is to believe it is possible. - Charles Kingsleigh",
        "The greatest glory in living lies not in never falling, but in rising every time we fall. - Nelson Mandela",
        "It is during our darkest moments that we must focus to see the light. - Aristotle Onassis",
        "Strive not to be a success, but rather to be of value. - Albert Einstein",
        "You don't have to be rich to travel well. - Eugene Fodor",
        "The purpose of our lives is to be happy. - Dalai Lama",
        "The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it. - Jordan Belfort",
        "Success is how high you bounce when you hit bottom. - George S. Patton",
        "The only place where success comes before work is in the dictionary. - Vidal Sassoon",
        "You have within you right now, everything you need to deal with whatever the world can throw at you. - Brian Tracy",
        "The best way to predict the future is to create it. - Peter Drucker",
        "It always seems impossible until it's done. - Nelson Mandela",
        "Don't be pushed around by the fears in your mind. Be led by the dreams in your heart. - Roy T. Bennett",
        "The only easy day was yesterday. - Navy SEAL motto",
        "Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. - Steve Jobs",
        "The biggest adventure you can take is to live the life of your dreams. - Oprah Winfrey",
        "Life is either a daring adventure or nothing at all. - Helen Keller",
        "The best revenge is massive success. - Frank Sinatra",
        "It is not the mountain we conquer, but ourselves. - Sir Edmund Hillary",
        "The more I want to get something done, the less I call it work. - Richard Bach",
        "I haven't failed. I've just found 10,000 ways that won't work. - Thomas A. Edison",
        "If you're going through hell, keep going. - Winston Churchill",
        "Your time is limited, don't waste it living someone else's life. - Steve Jobs",
        "Believe in yourself and all that you are. Know that there is something inside you that is greater than any obstacle. - Christian D. Larson",
        "Every morning brings new potential, but only if you take the first step and leave the past behind. - Unknown",
        "Give me a STAR on the GitHub repo, thanks hehe - Me"
    ],
    "JavaScript": [
        "() => console.log('Hello World!');",
        "let incrementOne = [1,2,3,4,5].map(num => num +1);",
        "const square = x => x * x;",
        "const double = x => x * 2;",
        "const sum = (a, b) => a + b;",
        "const greet = name => console.log('Hello', name);",
        "const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);",
        "const getRandomNumber = () => Math.floor(Math.random() * 100) + 1;",
        "const filterEvenNumbers = numbers => numbers.filter(num => num % 2 === 0);",
        "const sumArray = numbers => numbers.reduce((acc, num) => acc + num, 0);",
        "const formatDate = date => new Date(date).toLocaleDateString();",
        "const findMaxValue = array => Math.max(...array);",
        "const isPalindrome = str => str === str.split('').reverse().join('');",
        "const getRandomColor = () => #${Math.floor(Math.random()*16777215).toString(16)};",
        "const removeDuplicates = array => [...new Set(array)];",
        "const calculateFactorial = n => n <= 1 ? 1 : n * calculateFactorial(n - 1);",
        "const getUniqueValues = array => [...new Set(array)];",
        "const shuffleArray = array => array.sort(() => Math.random() - 0.5);",
        "const capitalizeWords = sentence => sentence.split(' ').map(word => capitalize(word)).join(' ');",
        "const reverseString = str => str.split('').reverse().join('');",
        "let getRandomElement = array => array[Math.floor(Math.random() * array.length)];",
        "const isPrime = num => num > 1 && Array.from({ length: Math.floor(Math.sqrt(num)) + 1 }, (_, i) => i + 2).every(divisor => num % divisor !== 0);",
        "const countOccurrences = (array, target) => array.filter(element => element === target).length;",
        "const calculateFibonacci = n => n <= 1 ? n : calculateFibonacci(n - 1) + calculateFibonacci(n - 2);",
        "const swapValues = (a, b) => [b, a];",
        "const trimWhitespace = str => str.trim();",
        "const getUniqueCharacters = str => [...new Set(str)].join('');",
        "const deepCloneObject = obj => JSON.parse(JSON.stringify(obj));",
        "const isAnagram = (str1, str2) => str1.split('').sort().join('') === str2.split('').sort().join('');",
        "console.log('Welcome to JavaScript!');",
        "const doubleArray = [1, 2, 3].map(num => num * 2);",
        "const squareRoot = Math.sqrt(25);",
        "const filterPositive = [1, -2, 3, -4, 5].filter(num => num > 0);",
        "new Date().toLocaleDateString();",
        "const sumArray = [1, 2, 3, 4, 5].reduce((acc, num) => acc + num, 0);",
        "const capitalizeWords = str => str.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');",
        "const getRandomNumberInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;",
        "const findMaxValue = Math.max(10, 20, 30, 40, 50);",
        "const reverseString = str => str.split('').reverse().join('');",
        "const sumPositiveNumbers = [1, -2, 3, -4, 5].reduce((acc, num) => num > 0 ? acc + num : acc, 0);",
        "const isPalindrome = str => str === str.split('').reverse().join('');",
        "function studyProgramming(time, difficulty, callback)",
        "const uniqueValues = [...new Set([1, 2, 2, 3, 4, 4, 5])];",
        "const calculateFactorial = n => n <= 1 ? 1 : n * calculateFactorial(n - 1);",
        "const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);",
        "const capitalizeEachWord = str => str.replace(/\b/w/g, char => char.toUpperCase());",
        "const getDifference = (a, b) => Math.abs(a - b);",
        "const truncateString = (str, maxLength) => str.length > maxLength ? str.slice(0, maxLength) + '...' : str;",
        "const countOccurrences = (arr, target) => arr.filter(item => item === target).length;",
        "const calculateFibonacci = n => n <= 1 ? n : calculateFibonacci(n - 1) + calculateFibonacci(n - 2);",
        "let swapValues = (a, b) => [b, a];",
        "const trimWhitespace = str => str.trim();",
        "const getRandomElement = arr => arr[Math.floor(Math.random() * arr.length)];",
        "const isPrime = num => num > 1 && Array.from({ length: Math.floor(Math.sqrt(num)) + 1 }, (_, i) => i + 2).every(divisor => num % divisor !== 0);",
        "const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);",
        "const getUniqueCharacters = str => [...new Set(str)].join('');",
        "const deepCloneObject = obj => JSON.parse(JSON.stringify(obj));",
        "const isAnagram = (str1, str2) => str1.split('').sort().join('') === str2.split('').sort().join('');",
        "const calculateSquare = num => num ** 2;",
        "const reverseWords = str => str.split(' ').reverse().join(' ');"
    ],
    "Python": [
        "print('Hello, World!')",
        "increment_one = [num + 1 for num in [1, 2, 3, 4, 5]]",
        "square = lambda x: x ** 2",
        "double = lambda x: x * 2",
        "sum_result = lambda a, b: a + b",
        "greet = lambda name: f'Hello, {name}!'",
        "capitalize = lambda s: s.capitalize()",
        "import random; random_number = random.randint(1, 100)",
        "even_numbers = list(filter(lambda num: num % 2 == 0, [1, 2, 3, 4, 5]))",
        "sum_array = sum([1, 2, 3, 4, 5])",
        "from datetime import datetime; formatted_date = datetime.now().strftime('%Y-%m-%d')",
        "max_value = max([1, 2, 3, 4, 5])",
        "is_palindrome = lambda s: s == s[::-1]",
        "import colorsys; random_color = '#{0:02x}{1:02x}{2:02x}'.format(*(int(x * 255) for x in colorsys.hsv_to_rgb(random.random(), 1, 1)))",
        "unique_elements = list(set([1, 2, 2, 3, 4, 4, 5]))",
        "import math; factorial = math.factorial(5)",
        "unique_values = list(set([1, 2, 3, 4, 5]))",
        "import random; shuffled_array = random.sample([1, 2, 3, 4, 5], 5)",
        "capitalize_words = lambda sentence: ' '.join([word.capitalize() for word in sentence.split()])",
        "reverse_string = lambda s: s[::-1]",
        "random_element = random.choice(['apple', 'orange', 'banana'])",
        "def is_prime(n): return n > 1 and all(n % i != 0 for i in range(2, int(n**0.5) + 1))",
        "occurrences = [1, 2, 2, 3, 4, 4, 5].count(2)",
        "def fibonacci(n): return n if n <= 1 else fibonacci(n - 1) + fibonacci(n - 2)",
        "swap_values = lambda a, b: b, a",
        "trim_whitespace = lambda s: s.strip()",
        "unique_characters = ''.join(set('hello'))",
        "import copy; deep_clone = copy.deepcopy({'key': 'value'})",
        "is_anagram = lambda str1, str2: sorted(str1) == sorted(str2)",
        "import json; data = {'name': 'John', 'age': 30}; json_data = json.dumps(data)",
        "filter_positive = lambda numbers: list(filter(lambda x: x > 0, numbers))",
        "import os; current_directory = os.getcwd()",
        "flatten_list = lambda nested_list: [item for sublist in nested_list for item in sublist]",
        "is_valid_email = lambda email: '@' in email and '.' in email.split('@')[-1]",
        "import random; dice_roll = random.randint(1, 6)",
        "merge_dicts = lambda dict1, dict2: {**dict1, **dict2}",
        "import math; hypotenuse = math.sqrt(math.pow(3, 2) + math.pow(4, 2))",
        "import datetime; current_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')",
        "sum_positive = lambda numbers: sum(filter(lambda x: x > 0, numbers))",
        "import re; extract_numbers = lambda text: list(map(int, re.findall(r'/d+', text)))",
        "remove_duplicates_set = lambda values: list(set(values))",
        "import calendar; current_month = calendar.month_name[datetime.datetime.now().month]",
        "reverse_dict = lambda input_dict: {v: k for k, v in input_dict.items()}",
        "import itertools; permutations = list(itertools.permutations([1, 2, 3]))",
        "flatten_dict = lambda nested_dict: {key2: value for key1, inner_dict in nested_dict.items() for key2, value in inner_dict.items()}",
        "import statistics; mean_value = statistics.mean([1, 2, 3, 4, 5])",
        "import requests; response = requests.get('https://www.example.com')",
        "print('Hello Javier Cuenca Gento')",
        "merge_lists = lambda list1, list2: list1 + list2",
        "import hashlib; hashed_value = hashlib.sha256(b'hello').hexdigest()",
        "swap_case = lambda s: s.swapcase()",
        "import numpy as np; matrix = np.array([[1, 2], [3, 4]])",
        "import platform; os_info = platform.system() + ' ' + platform.release()",
        "chunk_list = lambda lst, chunk_size: [lst[i:i + chunk_size] for i in range(0, len(lst), chunk_size)]",
        "import urllib.parse; encoded_url = urllib.parse.quote('https://www.example.com/path with spaces')",
        "is_subsequence = lambda sub, s: all(c in s for c in sub)",
        "import csv; with open('data.csv', 'w') as file: writer = csv.writer(file); writer.writerow(['Name', 'Age']); writer.writerow(['John', 30])",
        "powers_of_two = lambda n: [2**i for i in range(n)]",
        "import math; hypotenuse = math.sqrt(math.pow(3, 2) + math.pow(4, 2))",
        "import emoji; smiley_face = emoji.emojize(':smile:', use_aliases=True)"
    ],
    "Spanish": [
        "casa perro gato mesa silla libro árbol sol luna mar montaña campo ciudad calle parque",
        "amigo familia trabajo escuela universidad estudiante profesor médico abogado ingeniero",
        "comida bebida desayuno almuerzo cena fruta verdura carne pescado agua jugo café",
        "viaje vacaciones avión tren autobús coche bicicleta taxi hotel playa montaña parque",
        "hola adiós gracias por favor sí no quizás siempre nunca ahora mañana tarde noche",
        "amor odio felicidad tristeza alegría sorpresa miedo enojo calma paz guerra",
        "bienestar salud deporte ejercicio dieta dormir descanso relajación meditación yoga",
        "arte música pintura escultura fotografía cine teatro literatura poesía danza",
        "historia cultura tradición costumbre religión mito leyenda folclore celebración",
        "ciencia tecnología innovación descubrimiento investigación experimento laboratorio",
        "azul rojo verde amarillo naranja rosa violeta blanco negro gris marrón turquesa",
        "plato tenedor cuchillo cuchara taza vaso copa botella cocina horno microondas",
        "ropa zapatos calcetines pantalón camisa vestido falda chaqueta abrigo sombrero",
        "mesa escritorio silla sofá cama armario estante lámpara cuadro espejo alfombra",
        "lápiz bolígrafo papel cuaderno libro revista periódico pincel lienzo pintura tinta",
        "televisión radio teléfono computadora tableta impresora altavoz auriculares cable",
        "número letra palabra frase párrafo título subtítulo capítulo índice contenido",
        "colegio escuela universidad aula laboratorio biblioteca gimnasio cafetería",
        "familia madre padre hermano hermana hijo hija abuelo abuela tío tía primo",
        "pintura escultura música danza teatro cine literatura poesía fotografía",
        "aleatorio constante variable función objeto clase método propiedad argumento",
        "acelerar frenar girar avanzar retroceder detener estacionar subir bajar cruzar",
        "aprender enseñar estudiar practicar investigar comprender pensar recordar olvidar",
        "escuchar hablar escribir leer dibujar pintar cantar bailar tocar crear imaginar",
        "agua tierra aire fuego luz sonido calor frío electricidad magnetismo gravedad",
        "solución problema pregunta respuesta solución solución solución solución solución",
        "feliz triste enojado asustado sorprendido cansado relajado estresado preocupado",
        "cálido frío húmedo seco alto bajo grande pequeño rápido lento claro oscuro",
        "fácil difícil simple complejo correcto incorrecto verdadero falso positivo negativo",
        "atractivo feo bonito hermoso grande pequeño fuerte débil joven viejo nuevo",
        "abierto cerrado arriba abajo adelante atrás dentro fuera cerca lejos izquierda",
        "derecha temprano tarde ahora antes después primero último próximo anterior",
        "siguiente anterior igual diferente mismo otro cada algunos varios muchos",
        "ninguno todo algo nada poco mucho más menos mejor peor igual diferente",
        "fuego agua aire tierra viento lluvia nieve sol calor frío hielo rayo trueno",
        "manzana plátano naranja pera uva fresa limón mango piña melón sandía cereza",
        "rojo azul verde amarillo naranja violeta blanco negro gris marrón rosa dorado",
        "cama mesa silla sofá armario estante lámpara espejo alfombra cortina cojín",
        "mochila bolso maleta cartera bolsillo monedero paraguas gorro bufanda guantes",
        "baloncesto fútbol tenis voleibol béisbol golf rugby hockey natación atletismo",
        "cuchillo tenedor cuchara plato vaso taza tazón servilleta mantel cubierto cocina",
        "parque jardín bosque pradera desierto selva monte río lago mar océano cascada",
        "guitarra piano violín trompeta flauta tambor saxofón acordeón arpa órgano",
        "ropa zapatos camisa pantalón falda vestido abrigo chaqueta calcetín pijama",
        "espeleología buceo escalada senderismo paracaidismo alpinismo rafting esquí",
        "caramelo chocolate helado pastel galleta palomitas caramelos churros dulce",
        "biblioteca librería libro enciclopedia diccionario novela poema cuento ensayo",
        "cineasta actor actriz director guionista productor película estreno taquilla",
        "computadora teléfono tableta pantalla teclado ratón altavoz auriculares wifi",
        "tigre león elefante jirafa mono cebra panda oso cocodrilo serpiente leopardo",
        "pluma lápiz bolígrafo marcador goma sacapuntas cuaderno papel bloc cartulina",
        "pera manzana durazno ciruela uva higo almendra nuez avellana cacahuate",
        "camión coche motocicleta bicicleta tren barco avión helicóptero cohete",
        "vestíbulo escalera ascensor pasillo sala comedor cocina dormitorio baño",
        "telescopio microscopio brújula termómetro cronómetro regla balanza prisma",
        "primavera verano otoño invierno lluvioso soleado nublado ventoso frío cálido",
        "montaña río cascada bosque selva playa desierto volcán iceberg arrecife",
        "reloj despertador calendario agenda cronograma horario cita reunión evento",
        "guitarra violín piano batería trompeta saxofón flauta arpa violonchelo",
        "nadar bucear surfear remar esquiar patinar caminar correr saltar bailar",
        "pizza hamburguesa tacos sushi pasta ensalada carne pescado pollo verduras"
    ],
    "English": [
        "Another option you have is choosing the number of syllables in the words you speak.",
        "You probably have never considered this option before, but you have it every time you open",
        "your mouth and speak. You make so many choices like this that you never even think about,",
        "but you have the choice with each one. What are you going to do with this knowledge?",
        "The leather jacked showed the scars of being his favorite for years. It wore those scars with pride,",
        "feeling that they enhanced his presence rather than diminishing it. The scars gave it character",
        "and had not overwhelmed to the point that it had become ratty. The jacket was in its prime and it knew it.",
        "He scolded himself for being so tentative. He knew he should not be so cautious, but there was a",
        "sixth sense telling him that things weren't exactly as they appeared. It was that weird chill that",
        "rolls up your neck and makes the hair stand on end. He knew that being so tentative could end up",
        "costing him the job, but he learned that listening to his sixth sense usually kept him from",
        "in my honest opinion that could be possibly wrong, getting into a lot, very much, of trouble.",
        "It was supposed to be a dream vacation. They had planned it over a year in advance so that it",
        "would be perfect in every way. It had been what they had been looking forward to through all the",
        "turmoil and negativity around them. It had been the light at the end of both their tunnels.",
        "Now that the dream vacation was only a week away, the virus had stopped all air travel.",
        "All he could think about was how it would all end. There was still a bit of uncertainty",
        "in the equation, but the basics were there for anyone to see. No matter how much he tried to",
        "see the positive, it wasn't anywhere to be seen. The end was coming and it wasn't going to be pretty.",
        "Sleep deprivation causes all sorts of challenges and problems. When one does not get enough sleep ones",
        "mind does not work clearly. Studies have shown that after staying awake for 24 hours ones ability to do",
        "simple math is greatly impaired. Driving tired has been shown to be as bad as driving drunk.",
        "Moods change, depression, anxiety, and mania can be induced by lack of sleep. As much as people",
        "try to do without enough sleep it is a wonder more crazy things do not happen in this world.",
        "I checked in for the night at Out O The Way motel. What a bad choice that was. First I took a shower",
        "and a spider crawled out of the drain. Next, the towel rack fell down when I reached for the one small",
        "bath towel. This allowed the towel to fall halfway into the toilet. I tried to watch a movie, but the",
        "remote control was sticky and would not stop scrolling through the channels. I gave up for the night and",
        "crawled into bed. I stretched out my leg and felt something furry by my foot. Filled with fear, I reached",
        "down and to my surprise, I pulled out a raccoon skin pair of underwear. After my initial relief that it was",
        "not alive, the image of a fat, ugly businessman wearing raccoon skin briefs filled my brain.",
        "I jumped out of the bed, threw my toothbrush into my bag, and sprinted towards my car.",
        "house dog cat table chair book tree sun moon sea mountain field city street park",
        "friend family work school university student teacher doctor lawyer engineer",
        "food drink breakfast lunch dinner fruit vegetable meat fish water juice coffee",
        "travel vacation plane train bus car bicycle taxi hotel beach mountain park",
        "music art dance theater film painting sculpture photography poetry novel",
        "computer internet software hardware website program app data code",
        "love happiness joy sadness anger fear excitement passion romance",
        "time clock watch calendar hour minute second year month week",
        "money wealth cash currency bank finance economy budget savings",
        "health wellness exercise fitness diet nutrition sleep doctor medicine",
        "nature environment forest river lake waterfall flower wildlife ecosystem",
        "sport game soccer basketball football tennis golf swimming cycling",
        "technology innovation invention discovery science research experiment",
        "language communication speech writing conversation dialogue grammar",
        "history culture civilization ancient medieval modern contemporary archaeology",
        "education learning knowledge school university student teacher professor",
        "artificial intelligence robotics automation machine learning algorithm data",
        "space universe galaxy planet star moon astronaut rocket satellite",
        "film movie actor actress director screenplay cinematography editing",
        "politics government democracy president election parliament congress",
        "religion belief faith god church mosque temple spirituality prayer",
        "business company entrepreneur startup corporation investment profit",
        "fashion style clothing designer brand runway model accessory",
        "celebrity fame celebrity gossip paparazzi fan fan club idol",
        "crime justice police detective investigation criminal court prison",
        "travel destination tourist attraction landmark monument sightseeing adventure",
        "entertainment music movie theater performance concert festival exhibition",
        "healthcare hospital doctor nurse patient medical treatment therapy",
        "environment conservation sustainability recycling renewable energy climate change"
    ]
}