{
    "randomTexts": [
        "Lorem ipsum",
        "Lorem ipsum dolor sit am;et consectetur adipiscing elit et, purus quam felis suspendisse sed mus taciti fringilla, elementum rutrum tincidunt montes dictumst facilisi enim.",
        "ornare porttitor nec sem habitasse feugiat duis interdum mollis nisi facilisi. Facilisi tempor a sociosqu purus odio condimentum in nascetur, rutrum suspendisse porttitor.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti. Proin nec sagittis libero.",
        "Duis vel tristique dolor. Aenean id turpis in enim fringilla consectetur. Nulla facilisi. Curabitur ultrices dolor vel elit convallis, ac lacinia tortor laoreet.",
        "Cras vel commodo odio. Curabitur id lacinia dui. Integer eleifend dui ut turpis convallis, ac suscipit velit luctus.",
        "Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor. Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In hac habitasse platea dictumst.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu.",
        "Integer eget eros sit amet tellus tincidunt imperdiet. Nullam vel tortor scelerisque, lobortis velit vel, scelerisque sapien.",
        "Praesent euismod ligula a ultricies sollicitudin. Proin vel sapien eget libero rhoncus suscipit vel ut mauris.",
        "Nunc sed odio id sapien dapibus rhoncus. Nullam tincidunt nulla quis turpis ultrices, a finibus erat vestibulum.",
        "Aliquam erat volutpat. Nam bibendum, leo a tristique dapibus, odio nisi dapibus elit, vel consectetur quam nisi vel eros.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Praesent eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Suspendisse efficitur, dolor eu aliquet aliquet, urna lectus varius metus, a interdum odio odio vel ligula.",
        "Curabitur sed mi vel velit condimentum gravida in vitae odio. Duis accumsan nisi eu justo euismod euismod.",
        "Maecenas euismod, risus vel cursus commodo, est nisl hendrerit odio, vel efficitur dolor justo nec neque.",
        "Morbi et tortor ac ante faucibus iaculis. Fusce vel sem vel arcu sagittis vulputate.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.",
        "Vivamus cursus risus ut est bibendum facilisis. Suspendisse potenti. Sed at justo ac nulla eleifend auctor nec non ex.",
        "Donec bibendum erat ac libero lobortis, sed tristique felis mattis. Nullam nec turpis quis felis facilisis congue.",
        "Ut fringilla, mi vel sollicitudin pharetra, nisi odio scelerisque lectus, id hendrerit quam odio in erat.",
        "Cras euismod justo id cursus vestibulum. Vestibulum non nunc id neque tincidunt tincidunt non a quam.",
        "Maecenas a metus vel elit venenatis tincidunt. Quisque luctus consequat eros, vitae lobortis nunc iaculis ut.",
        "Sed ac justo id ligula fringilla ullamcorper. Nullam et velit vel libero vestibulum volutpat.",
        "Fusce sit amet efficitur nulla. Quisque nec mauris a leo malesuada accumsan vitae at nisl.",
        "Proin convallis, leo sit amet tincidunt suscipit, risus quam imperdiet turpis, ut volutpat sapien orci eget enim.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer vel arcu in mi hendrerit mattis.",
        "Cras vulputate, felis eu euismod feugiat, purus metus viverra justo, nec hendrerit dolor lectus id urna.",
        "Si Messi es la Pulga, Diego Costa la Pantera como no, Falcao el Tigre y Vinicius el mo",
        "Suspendisse potenti. Proin nec sagittis libero. Duis vel tristique dolor. Aenean id turpis in enim fringilla consectetur. Nulla facilisi.",
        "Curabitur ultrices dolor vel elit convallis, ac lacinia tortor laoreet.",
        "Maecenas eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti.",
        "Proin nec sagittis libero. Cras vel commodo odio. Curabitur id lacinia dui. Nullam vel tortor scelerisque, lobortis velit vel, scelerisque sapien.",
        "Praesent eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus dignissim vehicula.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu. Integer eget eros sit amet tellus tincidunt imperdiet.",
        "Curabitur sed mi vel velit condimentum gravida in vitae odio. Duis accumsan nisi eu justo euismod euismod. Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor.",
        "Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et, lobortis velit vel, scelerisque sapien",
        "Fusce sit amet efficitur nulla. Quisque nec mauris a leo malesuada accumsan vitae at nisl. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.",
        "Nam tincidunt, augue ut ultrices ultricies, metus ex aliquet mi, eu tincidunt velit est a arcu. Integer eget eros sit amet tellus tincidunt imperdiet. Nullam vel tortor scelerisque.",
        "Maecenas euismod ligula a ultricies sollicitudin. Proin vel sapien eget libero rhoncus suscipit vel ut mauris. Nunc sed odio id sapien dapibus rhoncus.",
        "Nullam tincidunt nulla quis turpis ultrices, a finibus erat vestibulum. Vivamus cursus risus ut est bibendum facilisis. Suspendisse potenti.",
        "Sed ac justo id ligula fringilla ullamcorper. Nullam et velit vel libero vestibulum volutpat. Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique.",
        "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer vel arcu in mi hendrerit mattis.",
        "Fusce vel lectus sit amet justo tincidunt accumsan. Aenean nec diam vitae metus varius tristique. Sed ac justo id ligula fringilla ullamcorper.",
        "Nullam et velit vel libero vestibulum volutpat, mi vel sollicitudin pharetra, nisi odio scelerisque lectus, id hendrerit quam odio in erat.",
        "Aliquam erat volutpat. Nam bibendum, leo a tristique dapibus, odio nisi dapibus elit, vel consectetur quam nisi vel eros. Suspendisse efficitur, dolor eu aliquet aliquet, urna lectus varius metus.",
        "Donec bibendum erat ac libero lobortis, sed tristique felis mattis. Nullam nec turpis quis felis facilisis congue. Ut fringilla, ",
        "Sed hendrerit justo non arcu bibendum, ut malesuada odio tempor. Quisque bibendum vulputate nisl, vel luctus felis sollicitudin et.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies.",
        "Vestibulum ac metus nec libero tristique imperdiet. Ut quis enim vel quam varius ultricies. Suspendisse potenti. Proin nec sagittis libero. Cras vel commodo odio. Curabitur id lacinia dui.",
        "Maecenas eu felis sed ipsum facilisis fermentum. Nulla facilisi. Vivamus sed lacus in metus digniss",
        "a interdum odio odio vel ligula. Diam aliquet ante fermentum fames mus luctus nullam.",
        "Mitshubishi, Naruto, Honda, Kawasaki, Fujitsu, Oliver y Benji, Pokemon",
        "Est tincidunt magna ut non cum ante venenatis commodo torquent eu, felis nam enim.",
        "Gracias por practicar tus fking skills en esta pagina web"
    ],
    "Quotes": [
        "You miss 100% of the shots you dont take - Wayne Gretzky - Michael Scott",
        "Fuck them kids - Michael Jordan",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "Success is not final, failure is not fatal: It is the courage to continue that counts. - Winston S. Churchill",
        "The only way to do great work is to love what you do. - Steve Jobs",
        "In three words I can sum up everything I've learned about life: it goes on. - Robert Frost",
        "Be the change that you wish to see in the world. - Mahatma Gandhi",
        "Life is what happens when you're busy making other plans. - John Lennon",
        "I've learned that people will forget what you said, people will forget what you did, but people will never forget how you made them feel. - Maya Angelou",
        "The greatest glory in living lies not in never falling, but in rising every time we fall. - Nelson Mandela",
        "The purpose of our lives is to be happy. - Dalai Lama",
        "Get busy living or get busy dying. - Stephen King",
        "You have within you right now, everything you need to deal with whatever the world can throw at you. - Brian Tracy",
        "The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it. - Jordan Belfort",
        "Don't count the days, make the days count. - Muhammad Ali",
        "Believe you can and you're halfway there. - Theodore Roosevelt",
        "The way to get started is to quit talking and begin doing. - Walt Disney",
        "Your time is limited, don't waste it living someone else's life. - Steve Jobs",
        "Do not wait to strike till the iron is hot, but make it hot by striking. - William Butler Yeats",
        "It does not matter how slowly you go as long as you do not stop. - Confucius",
        "Success usually comes to those who are too busy to be looking for it. - Henry David Thoreau",
        "A creative man is motivated by the desire to achieve, not by the desire to beat others. - Ayn Rand",
        "Strive not to be a success, but rather to be of value. - Albert Einstein",
        "The future belongs to those who believe in the beauty of their dreams. - Eleanor Roosevelt",
        "I have not failed. I've just found 10,000 ways that won't work. - Thomas A. Edison",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "It's not whether you get knocked down, it's whether you get up. - Vince Lombardi",
        "Success is stumbling from failure to failure with no loss of enthusiasm. - Winston S. Churchill",
        "The only way to do great work is to love what you do. - Steve Jobs",
        "Hakuna Matata. - Timon and Pumba",
        "The only limit to our realization of tomorrow will be our doubts of today. - Franklin D. Roosevelt",
        "Success is not the key to happiness. Happiness is the key to success. If you love what you are doing, you will be successful. - Albert Schweitzer",
        "Don't watch the clock; do what it does. Keep going. - Sam Levenson",
        "Believe you can and you're halfway there. - Theodore Roosevelt",
        "The only way to achieve the impossible is to believe it is possible. - Charles Kingsleigh",
        "The greatest glory in living lies not in never falling, but in rising every time we fall. - Nelson Mandela",
        "It is during our darkest moments that we must focus to see the light. - Aristotle Onassis",
        "Strive not to be a success, but rather to be of value. - Albert Einstein",
        "You don't have to be rich to travel well. - Eugene Fodor",
        "The purpose of our lives is to be happy. - Dalai Lama",
        "The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it. - Jordan Belfort",
        "Success is how high you bounce when you hit bottom. - George S. Patton",
        "The only place where success comes before work is in the dictionary. - Vidal Sassoon",
        "You have within you right now, everything you need to deal with whatever the world can throw at you. - Brian Tracy",
        "The best way to predict the future is to create it. - Peter Drucker",
        "It always seems impossible until it's done. - Nelson Mandela",
        "Don't be pushed around by the fears in your mind. Be led by the dreams in your heart. - Roy T. Bennett",
        "The only easy day was yesterday. - Navy SEAL motto",
        "Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. - Steve Jobs",
        "The biggest adventure you can take is to live the life of your dreams. - Oprah Winfrey",
        "Life is either a daring adventure or nothing at all. - Helen Keller",
        "The best revenge is massive success. - Frank Sinatra",
        "It is not the mountain we conquer, but ourselves. - Sir Edmund Hillary",
        "The more I want to get something done, the less I call it work. - Richard Bach",
        "I haven't failed. I've just found 10,000 ways that won't work. - Thomas A. Edison",
        "If you're going through hell, keep going. - Winston Churchill",
        "Your time is limited, don't waste it living someone else's life. - Steve Jobs",
        "Believe in yourself and all that you are. Know that there is something inside you that is greater than any obstacle. - Christian D. Larson",
        "Every morning brings new potential, but only if you take the first step and leave the past behind. - Unknown",
        "Give me a STAR on the GitHub repo, thanks hehe - Me"
    ],
    "JavaScript": [
        "() => console.log('Hello World!');",
        "let incrementOne = [1,2,3,4,5].map(num => num +1);",
        "const square = x => x * x;",
        "const double = x => x * 2;",
        "const sum = (a, b) => a + b;",
        "const greet = name => console.log('Hello', name);",
        "const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);",
        "const getRandomNumber = () => Math.floor(Math.random() * 100) + 1;",
        "const filterEvenNumbers = numbers => numbers.filter(num => num % 2 === 0);",
        "const sumArray = numbers => numbers.reduce((acc, num) => acc + num, 0);",
        "const formatDate = date => new Date(date).toLocaleDateString();",
        "const findMaxValue = array => Math.max(...array);",
        "const isPalindrome = str => str === str.split('').reverse().join('');",
        "const getRandomColor = () => #${Math.floor(Math.random()*16777215).toString(16)};",
        "const removeDuplicates = array => [...new Set(array)];",
        "const calculateFactorial = n => n <= 1 ? 1 : n * calculateFactorial(n - 1);",
        "const getUniqueValues = array => [...new Set(array)];",
        "const shuffleArray = array => array.sort(() => Math.random() - 0.5);",
        "const capitalizeWords = sentence => sentence.split(' ').map(word => capitalize(word)).join(' ');",
        "const reverseString = str => str.split('').reverse().join('');",
        "let getRandomElement = array => array[Math.floor(Math.random() * array.length)];",
        "const isPrime = num => num > 1 && Array.from({ length: Math.floor(Math.sqrt(num)) + 1 }, (_, i) => i + 2).every(divisor => num % divisor !== 0);",
        "const countOccurrences = (array, target) => array.filter(element => element === target).length;",
        "const calculateFibonacci = n => n <= 1 ? n : calculateFibonacci(n - 1) + calculateFibonacci(n - 2);",
        "const swapValues = (a, b) => [b, a];",
        "const trimWhitespace = str => str.trim();",
        "const getUniqueCharacters = str => [...new Set(str)].join('');",
        "const deepCloneObject = obj => JSON.parse(JSON.stringify(obj));",
        "const isAnagram = (str1, str2) => str1.split('').sort().join('') === str2.split('').sort().join('');",
        "console.log('Welcome to JavaScript!');",
        "const doubleArray = [1, 2, 3].map(num => num * 2);",
        "const squareRoot = Math.sqrt(25);",
        "const filterPositive = [1, -2, 3, -4, 5].filter(num => num > 0);",
        "new Date().toLocaleDateString();",
        "const sumArray = [1, 2, 3, 4, 5].reduce((acc, num) => acc + num, 0);",
        "const capitalizeWords = str => str.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');",
        "const getRandomNumberInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;",
        "const findMaxValue = Math.max(10, 20, 30, 40, 50);",
        "const reverseString = str => str.split('').reverse().join('');",
        "const sumPositiveNumbers = [1, -2, 3, -4, 5].reduce((acc, num) => num > 0 ? acc + num : acc, 0);",
        "const isPalindrome = str => str === str.split('').reverse().join('');",
        "function studyProgramming(time, difficulty, callback)",
        "const uniqueValues = [...new Set([1, 2, 2, 3, 4, 4, 5])];",
        "const calculateFactorial = n => n <= 1 ? 1 : n * calculateFactorial(n - 1);",
        "const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);",
        "const capitalizeEachWord = str => str.replace(/\b/w/g, char => char.toUpperCase());",
        "const getDifference = (a, b) => Math.abs(a - b);",
        "const truncateString = (str, maxLength) => str.length > maxLength ? str.slice(0, maxLength) + '...' : str;",
        "const countOccurrences = (arr, target) => arr.filter(item => item === target).length;",
        "const calculateFibonacci = n => n <= 1 ? n : calculateFibonacci(n - 1) + calculateFibonacci(n - 2);",
        "let swapValues = (a, b) => [b, a];",
        "const trimWhitespace = str => str.trim();",
        "const getRandomElement = arr => arr[Math.floor(Math.random() * arr.length)];",
        "const isPrime = num => num > 1 && Array.from({ length: Math.floor(Math.sqrt(num)) + 1 }, (_, i) => i + 2).every(divisor => num % divisor !== 0);",
        "const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);",
        "const getUniqueCharacters = str => [...new Set(str)].join('');",
        "const deepCloneObject = obj => JSON.parse(JSON.stringify(obj));",
        "const isAnagram = (str1, str2) => str1.split('').sort().join('') === str2.split('').sort().join('');",
        "const calculateSquare = num => num ** 2;",
        "const reverseWords = str => str.split(' ').reverse().join(' ');"
    ],
    "Python": [
        "print('Hello, World!')",
        "increment_one = [num + 1 for num in [1, 2, 3, 4, 5]]",
        "square = lambda x: x ** 2",
        "double = lambda x: x * 2",
        "sum_result = lambda a, b: a + b",
        "greet = lambda name: f'Hello, {name}!'",
        "capitalize = lambda s: s.capitalize()",
        "import random; random_number = random.randint(1, 100)",
        "even_numbers = list(filter(lambda num: num % 2 == 0, [1, 2, 3, 4, 5]))",
        "sum_array = sum([1, 2, 3, 4, 5])",
        "from datetime import datetime; formatted_date = datetime.now().strftime('%Y-%m-%d')",
        "max_value = max([1, 2, 3, 4, 5])",
        "is_palindrome = lambda s: s == s[::-1]",
        "import colorsys; random_color = '#{0:02x}{1:02x}{2:02x}'.format(*(int(x * 255) for x in colorsys.hsv_to_rgb(random.random(), 1, 1)))",
        "unique_elements = list(set([1, 2, 2, 3, 4, 4, 5]))",
        "import math; factorial = math.factorial(5)",
        "unique_values = list(set([1, 2, 3, 4, 5]))",
        "import random; shuffled_array = random.sample([1, 2, 3, 4, 5], 5)",
        "capitalize_words = lambda sentence: ' '.join([word.capitalize() for word in sentence.split()])",
        "reverse_string = lambda s: s[::-1]",
        "random_element = random.choice(['apple', 'orange', 'banana'])",
        "def is_prime(n): return n > 1 and all(n % i != 0 for i in range(2, int(n**0.5) + 1))",
        "occurrences = [1, 2, 2, 3, 4, 4, 5].count(2)",
        "def fibonacci(n): return n if n <= 1 else fibonacci(n - 1) + fibonacci(n - 2)",
        "swap_values = lambda a, b: b, a",
        "trim_whitespace = lambda s: s.strip()",
        "unique_characters = ''.join(set('hello'))",
        "import copy; deep_clone = copy.deepcopy({'key': 'value'})",
        "is_anagram = lambda str1, str2: sorted(str1) == sorted(str2)",
        "import json; data = {'name': 'John', 'age': 30}; json_data = json.dumps(data)",
        "filter_positive = lambda numbers: list(filter(lambda x: x > 0, numbers))",
        "import os; current_directory = os.getcwd()",
        "flatten_list = lambda nested_list: [item for sublist in nested_list for item in sublist]",
        "is_valid_email = lambda email: '@' in email and '.' in email.split('@')[-1]",
        "import random; dice_roll = random.randint(1, 6)",
        "merge_dicts = lambda dict1, dict2: {**dict1, **dict2}",
        "import math; hypotenuse = math.sqrt(math.pow(3, 2) + math.pow(4, 2))",
        "import datetime; current_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')",
        "sum_positive = lambda numbers: sum(filter(lambda x: x > 0, numbers))",
        "import re; extract_numbers = lambda text: list(map(int, re.findall(r'/d+', text)))",
        "remove_duplicates_set = lambda values: list(set(values))",
        "import calendar; current_month = calendar.month_name[datetime.datetime.now().month]",
        "reverse_dict = lambda input_dict: {v: k for k, v in input_dict.items()}",
        "import itertools; permutations = list(itertools.permutations([1, 2, 3]))",
        "flatten_dict = lambda nested_dict: {key2: value for key1, inner_dict in nested_dict.items() for key2, value in inner_dict.items()}",
        "import statistics; mean_value = statistics.mean([1, 2, 3, 4, 5])",
        "import requests; response = requests.get('https://www.example.com')",
        "print('Hello Javier Cuenca Gento')",
        "merge_lists = lambda list1, list2: list1 + list2",
        "import hashlib; hashed_value = hashlib.sha256(b'hello').hexdigest()",
        "swap_case = lambda s: s.swapcase()",
        "import numpy as np; matrix = np.array([[1, 2], [3, 4]])",
        "import platform; os_info = platform.system() + ' ' + platform.release()",
        "chunk_list = lambda lst, chunk_size: [lst[i:i + chunk_size] for i in range(0, len(lst), chunk_size)]",
        "import urllib.parse; encoded_url = urllib.parse.quote('https://www.example.com/path with spaces')",
        "is_subsequence = lambda sub, s: all(c in s for c in sub)",
        "import csv; with open('data.csv', 'w') as file: writer = csv.writer(file); writer.writerow(['Name', 'Age']); writer.writerow(['John', 30])",
        "powers_of_two = lambda n: [2**i for i in range(n)]",
        "import math; hypotenuse = math.sqrt(math.pow(3, 2) + math.pow(4, 2))",
        "import emoji; smiley_face = emoji.emojize(':smile:', use_aliases=True)"
    ]
}